{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["class Result {\n  constructor(validatorFn, data) {\n    this.result = null;\n    this.validatorFn = validatorFn;\n    this.data = data;\n    this.hasErrors = false;\n  }\n\n  _runValidator() {\n    if (this.data) {\n      this.result = this.validatorFn(this.data);\n    } else {\n      this.result = this.validatorFn;\n    }\n    this.hasErrors = Object.keys(this.result).length !== 0;\n  }\n\n  Success(fn) {\n    if (this.hasErrors) return this;\n    this._runValidator();\n    if (this.hasErrors) return this;\n\n    fn();\n    return this;\n  }\n\n  Fail(fn) {\n    if (this.hasErrors) {\n      fn(this.result);\n      return this;\n    }\n\n    this._runValidator();\n\n    if (this.hasErrors) {\n      fn(this.result);\n      return this;\n    }\n\n    return this;\n  }\n\n  getResult() {\n    this._runValidator();\n    return this.result;\n  }\n}\n\nexport const createRule = (defaultMsg, fn) => (...args) => msg => value => {\n  return fn.apply(null, args.concat(msg || defaultMsg, value));\n};\n\ncreateRule.success = undefined;\n\nexport const validate = (validatorFn, data) =>\n  data ? new Result(validatorFn, data) : new Result(validatorFn);"],"names":["Result","validatorFn","data","result","hasErrors","this","Object","keys","length","fn","_runValidator","createRule","defaultMsg","args","msg","value","apply","concat","success","undefined","validate"],"mappings":"8cAAMA,6BACQC,EAAaC,gCAClBC,OAAS,UACTF,YAAcA,OACdC,KAAOA,OACPE,WAAY,+DAIbC,KAAKH,UACFC,OAASE,KAAKJ,YAAYI,KAAKH,WAE/BC,OAASE,KAAKJ,iBAEhBG,UAAgD,IAApCE,OAAOC,KAAKF,KAAKF,QAAQK,uCAGpCC,UACFJ,KAAKD,UAAkBC,WACtBK,gBACDL,KAAKD,WAETK,IAF2BJ,mCAMxBI,UACCJ,KAAKD,UACPK,EAAGJ,KAAKF,cAILO,gBAEDL,KAAKD,WACPK,EAAGJ,KAAKF,SANDE,qDAcJK,gBACEL,KAAKF,gBAIHQ,WAAa,SAACC,EAAYH,UAAO,sCAAII,2BAAAA,yBAAS,SAAAC,UAAO,SAAAC,UACzDN,EAAGO,MAAM,KAAMH,EAAKI,OAAOH,GAAOF,EAAYG,QAGvDJ,WAAWO,aAAUC,EAErB,IAAaC,SAAW,SAACnB,EAAaC,UACpCA,EAAO,IAAIF,OAAOC,EAAaC,GAAQ,IAAIF,OAAOC"}