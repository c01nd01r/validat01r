{"version":3,"file":"index.js","sources":["../../src/index.js","../../src/rules/isNumber/index.js","../../src/rules/minNumber/minNumber.js","../../src/rules/minNumber/index.js","../../src/rules/some/some.js","../../src/rules/some/index.js","../../src/rules/required/required.js","../../src/rules/required/index.js"],"sourcesContent":["class Result {\n  constructor(validatorFn, data) {\n    this.result = null;\n    this.validatorFn = validatorFn;\n    this.data = data;\n    this.hasErrors = false;\n  }\n\n  _runValidator() {\n    if (this.data) {\n      this.result = this.validatorFn(this.data);\n    } else {\n      this.result = this.validatorFn;\n    }\n    this.hasErrors = Object.keys(this.result).length !== 0;\n  }\n\n  Success(fn) {\n    if (this.hasErrors) return this;\n    this._runValidator();\n    if (this.hasErrors) return this;\n\n    fn();\n    return this;\n  }\n\n  Fail(fn) {\n    if (this.hasErrors) {\n      fn(this.result);\n      return this;\n    }\n\n    this._runValidator();\n\n    if (this.hasErrors) {\n      fn(this.result);\n      return this;\n    }\n\n    return this;\n  }\n\n  getResult() {\n    this._runValidator();\n    return this.result;\n  }\n}\n\nexport const createRule = (defaultMsg, fn) => (...args) => msg => value => {\n  return fn.apply(null, args.concat(msg || defaultMsg, value));\n};\n\ncreateRule.success = undefined;\n\nexport const validate = (validatorFn, data) =>\n  data ? new Result(validatorFn, data) : new Result(validatorFn);","import isNumber from './isNumber';\nimport { createRule } from '../../index';\n\nexport default createRule('Value in not a Number', (msg, value) =>\n  isNumber(value) ? createRule.success : msg,\n);","export default function minNumber(min, value) {\n  return min < value;\n}\n","import minNumber from './minNumber';\nimport { createRule } from '../../index';\n\nexport default createRule('The number is less than the minimum possible', (min, msg, value) =>\n  minNumber(min, value) ? createRule.success : msg,\n);\n","export default function some(variants, value) {\n  return variants.includes(value);\n}\n","import some from './some';\nimport { createRule } from '../../index';\n\nexport default createRule('Value in not included', (variants, msg, value) =>\n  some(variants, value) ? createRule.success : msg,\n);\n","export default function required(val) {\n  if (typeof val === 'string') {\n    return val.trim().length > 0;\n  }\n  return !(val === undefined || val === null);\n}\n","import { createRule } from '../../index';\nimport required from './required';\n\nexport default createRule('This field is required', (msg, value) =>\n  required(value) ? createRule.success : msg,\n);\n"],"names":["Result","validatorFn","data","result","hasErrors","this","Object","keys","length","fn","_runValidator","createRule","defaultMsg","args","msg","value","apply","concat","success","undefined","isNumber","minNumber","min","some","variants","includes","required","val","trim"],"mappings":"qlBAAMA,6BACQC,EAAaC,gCAClBC,OAAS,UACTF,YAAcA,OACdC,KAAOA,OACPE,WAAY,+DAIbC,KAAKH,UACFC,OAASE,KAAKJ,YAAYI,KAAKH,WAE/BC,OAASE,KAAKJ,iBAEhBG,UAAgD,IAApCE,OAAOC,KAAKF,KAAKF,QAAQK,uCAGpCC,UACFJ,KAAKD,UAAkBC,WACtBK,gBACDL,KAAKD,WAETK,IAF2BJ,mCAMxBI,UACCJ,KAAKD,UACPK,EAAGJ,KAAKF,cAILO,gBAEDL,KAAKD,WACPK,EAAGJ,KAAKF,SANDE,qDAcJK,gBACEL,KAAKF,gBAIHQ,WAAa,SAACC,EAAYH,UAAO,sCAAII,2BAAAA,yBAAS,SAAAC,UAAO,SAAAC,UACzDN,EAAGO,MAAM,KAAMH,EAAKI,OAAOH,GAAOF,EAAYG,QAGvDJ,WAAWO,aAAUC,ECjDrB,UAAeR,WAAW,wBAAyB,SAACG,EAAKC,UACvDK,SAASL,GAASJ,WAAWO,QAAUJ,ICJ1B,SAASO,UAAUC,EAAKP,UAC9BO,EAAMP,cCEAJ,WAAW,+CAAgD,SAACW,EAAKR,EAAKC,UACnFM,UAAUC,EAAKP,GAASJ,WAAWO,QAAUJ,ICJhC,SAASS,KAAKC,EAAUT,UAC9BS,EAASC,SAASV,eCEZJ,WAAW,wBAAyB,SAACa,EAAUV,EAAKC,UACjEQ,KAAKC,EAAUT,GAASJ,WAAWO,QAAUJ,ICJhC,SAASY,SAASC,SACZ,iBAARA,EACkB,EAApBA,EAAIC,OAAOpB,eAEXmB,eCDIhB,WAAW,yBAA0B,SAACG,EAAKC,UACxDW,SAASX,GAASJ,WAAWO,QAAUJ"}